@import './_default-values.scss';
@import './rwd.scss';

$edges: (
  'all': '',
  'top': 't',
  'right': 'r',
  'bottom': 'b',
  'left': 'l',
);

$spacing-types: (
  'padding': 'p',
  'margin': 'm',
);

$breakpoints: keys($breakpoints-up);

/**
  Eventually this should result in a bunch of
  utility classes like this:

  // Padding
    // Individual sides
    .pt-0 -> .pt-10
    .pr-0 -> .pr-10
    .pb-0 -> .pb-10
    .pl-0 -> .pl-10

    // Multiple sides
    .p-0  -> .p-10   // all
    .pv-0 -> .pv-10  // vertical
    .ph-0 -> .ph-10  // horizontal

  // Margins
    // Individual sides
    .mt-0 -> .mt-10
    .mr-0 -> .mr-10
    .mb-0 -> .mb-10
    .ml-0 -> .ml-10

    // Multiple sides
    .m-0  -> .m-10   // all
    .mv-0 -> .mv-10  // vertical
    .mh-0 -> .mh-10  // horizontal
 */

// Support spacing multipliers from 0 to 20
@for $i from 0 to 21 {
  // Iterate through the spacing types
  @each $spacing-type, $spacing-label in $spacing-types {
    // Iterate through individual edges
    @each $edge-key, $edge-value in $edges {
      // Individual sides, e.g. pt-1
      .#{$spacing-label}#{$edge-value}-#{$i} {
        @if $edge-key == 'all' {
          #{$spacing-type}: ($i * $spacer);
        } @else {
          #{$spacing-type}-#{$edge-key}: ($i * $spacer);
        }
      }

      // Individual sides -> breakpoint, e.g. pt-md-1
      @each $breakpoint-key, $breakpoint-value in $breakpoints-up {
        .#{$spacing-label}#{$edge-value}-#{$breakpoint-key}-#{$i} {
          @include breakpoint-up($breakpoint-key) {
            @if $edge-key == 'all' {
              #{$spacing-type}: ($i * $spacer);
            } @else {
              #{$spacing-type}-#{$edge-key}: ($i * $spacer);
            }
          }
        }
      }
    }

    // Iterate through shared edges
    // Horizontal
    .#{$spacing-label}h-#{$i} {
      #{$spacing-type}-left: ($i * $spacer);
      #{$spacing-type}-right: ($i * $spacer);
    }

    // Vertical
    .#{$spacing-label}v-#{$i} {
      #{$spacing-type}-top: ($i * $spacer);
      #{$spacing-type}-bottom: ($i * $spacer);
    }

    @each $breakpoint-key, $breakpoint-value in $breakpoints-up {
      @include breakpoint-up($breakpoint-key) {
        .#{$spacing-label}h-#{$breakpoint-key}-#{$i} {
          #{$spacing-type}-left: ($i * $spacer);
          #{$spacing-type}-right: ($i * $spacer);
        }

        // Vertical
        .#{$spacing-label}v-#{$breakpoint-key}-#{$i} {
          #{$spacing-type}-top: ($i * $spacer);
          #{$spacing-type}-bottom: ($i * $spacer);
        }
      }
    }
  }
}
